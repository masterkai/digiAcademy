'use strict';

$(function () {
    $('#bannerCarousel').slick({
        infinite: true,
        arrows: false,
        autoplay: true,
        autoplaySpeed: 8000,
        dots: true
    });
    if (screen.width > 768 || screen.height > 768) {
        $('#bannerCarousel .banner img[data-bimg]').each(function (idx, pobj) {
            $(pobj).attr('src', $(pobj).attr('data-bimg'));
        });
    }
    $('.tabs-panel').slick({
        laztLoad: 'progressive',
        arrows: true,
        autoplay: false,
        slidesToShow: 4,
        slidesPerRow: 4,
        slidesToScroll: 3,
        responsive: [{
            breakpoint: 991,
            settings: {
                slidesToShow: 3
            }
        }, {
            breakpoint: 768,
            settings: {
                slidesToShow: 2
            }
        }, {
            breakpoint: 480,
            settings: {
                slidesToShow: 1
            }
        }]
    });
    $('.topCourse__panel').slick({
        laztLoad: 'progressive',
        arrows: true,
        autoplay: false,
        slidesToShow: 4,
        slidesPerRow: 4,
        responsive: [{
            breakpoint: 1200,
            settings: {
                slidesToShow: 3
            }
        }, {
            breakpoint: 768,
            settings: {
                slidesToShow: 2
            }
        }, {
            breakpoint: 480,
            settings: {
                slidesToShow: 1
            }
        }]
    });
    $('.latestNews__track').slick({
        laztLoad: 'ondemand',
        arrows: true,
        autoplay: false,
        slidesToShow: 2,
        slidesPerRow: 2,
        responsive: [{
            breakpoint: 1200,
            settings: {
                slidesToShow: 2
            }
        }, {
            breakpoint: 768,
            settings: {
                slidesToShow: 1
            }
        }, {
            breakpoint: 480,
            settings: {
                slidesToShow: 1
            }
        }]
    });

    // $('.tabs-panel').slick('slickPlay');
});
'use strict';

var nav = $('nav');
var searchNav = $('#courseSearchBar');
var navHeight;
var searchNavHeight;
var topOfSearchNav;

$(function () {
    navHeight = nav.innerHeight();
    searchNavHeight = searchNav.innerHeight();
    topOfSearchNav = searchNav.offset().top;

    resizeDiv();
    window.onresize = function (event) {
        resizeDiv();
    };

    function resizeDiv() {
        navHeight = nav.innerHeight();
        searchNavHeight = searchNav.innerHeight();
        topOfSearchNav = searchNav.offset().top;
        console.log('topOfSearchNav!!' + topOfSearchNav);
        console.log('searchNavHeight!!' + searchNavHeight);
        console.log('navHeight!!' + navHeight);
        fixNav();
    }

    function fixNav() {
        if ($(window).scrollTop() >= topOfSearchNav - searchNavHeight) {
            // console.log('test!!'+topOfSearchNav);
            document.body.style.paddingTop = searchNavHeight + 'px';
            document.body.classList.add('fixed-nav');
            searchNav.css({
                // 'margin-top':navHeight+'px'
                // 'width': '100%',
                // 'background-color': 'rgba(255,255,255, .85)',
                // 'box-shadow': '0px 3px 3px rgba(0,0,0,0.15)',
                // 'position': 'fixed',
                // 'top': '0',
                // 'left': '50%',
                // 'transform': 'translateX(-50%)',
                // 'z-index': '1029',
            });
        } else {
            document.body.classList.remove('fixed-nav');
            document.body.style.paddingTop = 0;
            searchNav.css({
                'margin-top': 0 + 'px'
                // 'position': 'relative',
                // 'box-shadow': 'none',
            });
        }
    }

    $(window).on('scroll', fixNav);
    $(window).trigger('scroll');
});
'use strict';

$(function () {
    $(window).scroll(function () {
        if ($(this).scrollTop() > 150) {
            $('#freetry').fadeIn();
        } else {
            $('#freetry').fadeOut();
        }
    });
    if ($(window).width() < 767) {
        $('#tryform.collapse').removeClass('in');
        $('#tryform.collapse').addClass('out');
    } else {
        $('#tryform.collapse').removeClass('out');
        $('#tryform.collapse').addClass('in');
    }
});
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Person = function () {
    function Person(name) {
        _classCallCheck(this, Person);

        this.name = name;
    }

    _createClass(Person, [{
        key: 'hello',
        value: function hello() {
            if (typeof this.name === 'string') {
                return 'Hello, I am ' + this.name + '!';
            } else {
                return 'Hello!';
            }
        }
    }]);

    return Person;
}();

var person = new Person('Neo');
// var name = 'Jen Smith';

var greetHTML = templates['greeting']({
    message: person.hello()
});
// console.log();
// document.write(greetHTML);
'use strict';

var opened = false;

$(function () {

    $('.mobile-nav-menu-li-title-1').click(function () {
        if ($(this).hasClass('active')) {
            $(this).removeClass('active').next().hide();
            return;
        }

        $('.mobile-nav-menu-li-title-2.active').removeClass('active').next().hide();

        $('.mobile-nav-menu-li-title-1.active').removeClass('active').next().hide();
        $(this).addClass('active').next().show();
    });

    $('.mobile-nav-menu-li-title-2').click(function () {
        if ($(this).hasClass('active')) {
            $(this).removeClass('active').next().hide();
            return;
        }

        $('.mobile-nav-menu-li-title-2.active').removeClass('active').next().hide();
        $(this).addClass('active').next().show();
    });

    $('.contentsMask').click(function () {
        subMenuToggle();
    });

    $('.openBtn').click(function () {
        subMenuToggle();
    });

    function subMenuToggle() {
        var type = 1;
        var masked = false;

        if (!opened) {}
        ////$('.subMenu').css('top', 0);
        //if (type == "1" || type == "3") {
        //    $('.subMenu').css('position', 'fixed');
        //    $('.subMenu').css('height', '100%');
        //} else {
        //    $('.subMenu').css('position', 'absolute');
        //    $('.subMenu').css('height', 'auto');
        //    $(window).scrollTop(0);
        //}


        //$('.subMenu').css('left', opened ? -240 : 0);
        $('.subMenu').css({
            'transform': 'translateX(' + (opened ? -240 : 0) + 'px)',
            '-webkit-transform': 'translateX(' + (opened ? -240 : 0) + 'px)',
            '-moz-transform': 'translateX(' + (opened ? -240 : 0) + 'px)',
            '-ms-transform': 'translateX(' + (opened ? -240 : 0) + 'px)',
            '-o-transform': 'translateX(' + (opened ? -240 : 0) + 'px)'
        });

        if (!opened) {
            //if (type == "1" || type == "2") {
            //$('.mainContents').css('left', opened ? 0 : 240);
            $('.mainContents').css({
                'transform': 'translateX(' + (opened ? 0 : 240) + 'px)',
                '-webkit-transform': 'translateX(' + (opened ? 0 : 240) + 'px)',
                '-moz-transform': 'translateX(' + (opened ? 0 : 240) + 'px)',
                '-ms-transform': 'translateX(' + (opened ? 0 : 240) + 'px)',
                '-o-transform': 'translateX(' + (opened ? 0 : 240) + 'px)'
            });
            //}
        } else {
            //$('.mainContents').css('left', opened ? 0 : 240);
            $('.mainContents').css({
                'transform': 'translateX(' + (opened ? 0 : 240) + 'px)',
                '-webkit-transform': 'translateX(' + (opened ? 0 : 240) + 'px)',
                '-moz-transform': 'translateX(' + (opened ? 0 : 240) + 'px)',
                '-ms-transform': 'translateX(' + (opened ? 0 : 240) + 'px)',
                '-o-transform': 'translateX(' + (opened ? 0 : 240) + 'px)'
            });
        }

        //if (masked) {
        //    if (opened) {
        //        $('.contentsMask').hide();
        //    } else {
        //        $('.contentsMask').show();
        //    }
        //}
        if (!opened) {
            $('.openBtn').addClass('active');
        } else {
            $('.openBtn').removeClass('active');
        }
        opened = !opened;
    }

    $(window).on("load", resizeMainContents);
    $(window).on("resize", resizeMainContents);
    $(window).on("orientationchange", resizeMainContents);

    function resizeMainContents() {
        var prewinWidth = 768;
        var winxs2 = 992;
        var ww = $(window).width();

        if (ww != prewinWidth) {
            if (ww > winxs2 && prewinWidth <= winxs2) {
                //$('.mainContents').css('left', 0);
                $('.mainContents').css({
                    'transform': 'translateX(' + (opened ? 0 : 240) + 'px)',
                    '-webkit-transform': 'translateX(0px)',
                    '-moz-transform': 'translateX(0px)',
                    '-ms-transform': 'translateX(0px)',
                    '-o-transform': 'translateX(0px)'
                });
            } else if (ww <= winxs2 && prewinWidth > winxs2) {
                //$('.mainContents').css('left', opened ? 240 : 0);
                $('.mainContents').css({
                    'transform': 'translateX(' + (opened ? 240 : 0) + 'px)',
                    '-webkit-transform': 'translateX(' + (opened ? 240 : 0) + 'px)',
                    '-moz-transform': 'translateX(' + (opened ? 240 : 0) + 'px)',
                    '-ms-transform': 'translateX(' + (opened ? 240 : 0) + 'px)',
                    '-o-transform': 'translateX(' + (opened ? 240 : 0) + 'px)'
                });
            }
        }
        prewinWidth = ww;
        //console.log($('.subMenu').height())
        //$('.subMenu').height($(window).height() - 65);
        //console.log($(window).height());
        //console.log($('.subMenu').height());
    }
});
'use strict';

$(function () {
    $('.menuToggle').on('click mouseenter', function (e) {
        e.preventDefault();
        e.stopPropagation();
        // console.log($(this));
        $(this).addClass('actived').next().show().addClass('actived');
    });$('.menuToggle').on('mouseleave', function (e) {
        var tobj = $(this),
            teobj = $(e.relatedTarget);
        // console.log(teobj);
        // if ($.trim($(teobj).attr('href')) != '' && typeof ($(teobj).attr('href')) != 'undefined' && !$(teobj).hasClass('lv1Menu')) {
        //     return;
        // }
        //
        if (!($(teobj).hasClass('actived') || $(teobj).hasClass('nav-menu-2') || $(teobj).parent().hasClass('nav-menu-2'))) {
            $(tobj).removeClass('actived').next().hide().removeClass('actived');
        }
    });

    $('.nav-menu-2').on('mouseleave', function (e) {
        var tobj = $(this),
            teobj = $(e.relatedTarget);
        if (!$(teobj).hasClass('actived')) {
            $(tobj).removeClass('actived').hide().prev().removeClass('actived');
        }
    });
});
'use strict';

$(function () {
    var courseSearchSection = $('.courseSearch');
    $('.searchToggleBtn').click(function (e) {
        e.preventDefault();
        courseSearchSection.slideToggle();
    });
});
'use strict';

var age = 1;
console.log('age: ' + age);
'use strict';

$(function () {
    var lastTab = 0;

    $('#onlineCourses').each(function () {
        var $tabList = $(this).find('.tabs-nav'),
            $tabAnchors = $tabList.find('a'),
            $tabPanels = $(this).find('.tabs-panel');

        $tabAnchors.each(function (currentTab, obj) {
            $(obj).on('click', function (e) {
                e.preventDefault();
                // console.log($tabPanels.eq(currentTab));
                $tabPanels.eq(lastTab).css({ visibility: 'hidden', height: 0 });
                $tabPanels.eq(currentTab).css({ visibility: 'visible', height: 'auto' });
                $tabPanels.eq(currentTab).slick('slickPlay');
                $tabPanels.eq(lastTab).slick('slickPause');
                lastTab = currentTab;
                // console.log('lastTab:'+lastTab+' ,currentTab:'+currentTab+' ,obj:'+$(obj).attr('href'));

                // Add active class to the tab which was clicked!!
                var $this = $(obj);
                // console.log($this.attr('href'));
                if ($this.hasClass('active')) {
                    return;
                }

                $tabAnchors.removeClass('active');
                $this.addClass('active');

                // $tabPanels.css('display', 'none');
                // $($this.attr('href')).css('display', 'block');
            });
        });

        $tabAnchors.eq(0).trigger('click');
    });
});
'use strict';

$(function () {
    var lastTopCourseTab = 0;

    $('#topCourses').each(function () {
        var $tabList = $(this).find('.topCourse__tabsNav'),
            $tabItems = $tabList.find('li'),
            $topCoursePanels = $(this).find('.topCourse__panel');

        $tabItems.each(function (topCourseCurrentTab, obj) {
            $(obj).on('click', function (e) {
                e.preventDefault();
                $topCoursePanels.eq(lastTopCourseTab).css({ visibility: 'hidden', height: 0 });
                $topCoursePanels.eq(topCourseCurrentTab).css({ visibility: 'visible', height: 'auto' });
                $topCoursePanels.eq(topCourseCurrentTab).slick('slickPlay');
                $topCoursePanels.eq(lastTopCourseTab).slick('slickPause');
                lastTopCourseTab = topCourseCurrentTab;
                // console.log('lastTab:'+lastTab+' ,topCourseCurrentTab:'+topCourseCurrentTab+' ,obj:'+$(obj).attr('href'));

                // Add active class to the tab which was clicked!!
                var $this = $(obj);
                // console.log($this.attr('href'));
                if ($this.hasClass('active')) {
                    return;
                }

                $tabItems.removeClass('active');
                $this.addClass('active');

                // $topCoursePanels.css('display', 'none');
                // $($this.attr('href')).css('display', 'block');
            });
        });

        $tabItems.eq(0).trigger('click');
    });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
